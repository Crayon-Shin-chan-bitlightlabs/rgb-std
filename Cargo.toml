[workspace]
members = [".", "cli", "invoice"]
default-members = [".", "invoice"]

[workspace.package]
version = "0.12.0-beta.4"
keywords = ["bitcoin", "lightning", "rgb", "smart-contracts", "lnp-bp"]
categories = ["cryptography::cryptocurrencies"]
authors = ["Dr Maxim Orlovsky <orlovsky@lnp-bp.org>"]
homepage = "https://rgb.tech"
repository = "https://github.com/RGB-WG/rgb-std"
rust-version = "1.82.0"
edition = "2021"
license = "Apache-2.0"

[workspace.dependencies]
amplify = "4.8.0"
strict_encoding = "2.8.1"
strict_types = "2.8.1"
commit_verify = "=0.12.0-beta.4"
single_use_seals = "=0.12.0-beta.4"
baid64 = "0.4.1"
hypersonic = "=0.12.0-beta.4"
sonic-callreq = "=0.12.0-beta.4"
bp-core = "=0.12.0-beta.4"
rgb-core = "=0.12.0-beta.4"
rgb-std = { version = "=0.12.0-beta.4", path = "." }
chrono = "0.4.39"
serde = "1.0.215"

[package]
name = "rgb-std"
description = "Standard Library for RGB smart contracts"
version.workspace = true
keywords.workspace = true
categories.workspace = true
authors.workspace = true
homepage.workspace = true
repository.workspace = true
rust-version.workspace = true
edition.workspace = true
license.workspace = true
readme = "README.md"

[lib]
name = "rgb"
crate-type = ["cdylib", "rlib"] # We need this for WASM

[dependencies]
amplify.workspace = true
strict_encoding.workspace = true
strict_types.workspace = true
commit_verify.workspace = true
single_use_seals.workspace = true
hypersonic.workspace = true
bp-core = { workspace = true, optional = true }
rgb-core.workspace = true
chrono.workspace = true
serde = { workspace = true, optional = true }

[features]
default = ["std", "bitcoin"]
all = ["std", "bitcoin", "liquid", "prime", "fs", "serde"]
std = []

bitcoin = ["bp-core", "rgb-core/bitcoin"]
liquid = ["rgb-core/liquid"]
prime = ["rgb-core/prime"]

fs = ["std", "hypersonic/persist-file"]
serde = [
    "std",
    "dep:serde",
    "amplify/serde",
    "strict_encoding/serde",
    "strict_types/serde",
    "commit_verify/serde",
    "bp-core/serde",
    "rgb-core/serde",
    "chrono/serde"
]

stl = [
    "bp-core/stl", "commit_verify/stl"
]

[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = "0.2"
rand = { version = "0.8.4", optional = true }
getrandom = { version = "0.2", features = ["js"] }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen-test = "0.3"

[package.metadata.docs.rs]
features = ["all"]

[patch.crates-io]
sonic-callreq = { git = "https://github.com/AluVM/sonic" }
