[workspace]
members = [".", "cli"]
default-members = ["."]
resolver = "2"

[workspace.package]
version = "0.12.0-alpha.1"
authors = ["Dr Maxim Orlovsky <orlovsky@lnp-bp.org>"]
homepage = "https://github.com/RGB-WG"
repository = "https://github.com/RGB-WG/rgb-std"
keywords = ["bitcoin", "lightning", "rgb", "smart-contracts", "lnp-bp"]
categories = ["cryptography::cryptocurrencies"]
rust-version = "1.77.0" # Due to use of `rustfix`
edition = "2021"
license = "Apache-2.0"

[workspace.dependencies]
amplify = "4.8.0"
strict_encoding = "2.8.1"
strict_types = "2.8.1"
commit_verify = "0.12.0-beta.1"
single_use_seals = "0.12.0-beta.1"
hypersonic = "0.12.0-beta.1"
rgb-std = { version = "0.12.0-alpha.1", path = "." }
bp-core = "0.12.0-beta.2"
rgb-core = "0.12.0-beta.3"
serde = { package = "serde", version = "1", features = ["derive"] }

[package]
name = "rgb-std"
version = { workspace = true }
description = "Standard Library for RGB smart contracts"
keywords = { workspace = true }
categories = { workspace = true }
authors = { workspace = true }
repository = { workspace = true }
homepage = { workspace = true }
edition = { workspace = true }
license = { workspace = true }
rust-version = { workspace = true }
readme = "README.md"

[lib]
name = "rgbstd"
crate-type = ["cdylib", "rlib"] # We need this for WASM

[dependencies]
amplify = { workspace = true }
strict_encoding = { workspace = true }
strict_types = { workspace = true }
commit_verify = { workspace = true }
single_use_seals = { workspace = true }
hypersonic = { workspace = true }
bp-core = { workspace = true }
rgb-core = { workspace = true }
serde = { workspace = true, optional = true }

[features]
default = []
all = ["fs", "serde"]
serde = [
    "dep:serde",
    "amplify/serde",
    "strict_encoding/serde",
    "strict_types/serde",
    "commit_verify/serde",
    "bp-core/serde",
    "rgb-core/serde",
]
stl = [
    "bp-core/stl", "commit_verify/stl"
]
fs = ["hypersonic/persist-file"]

[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = "0.2"
rand = { version = "0.8.4", optional = true }
getrandom = { version = "0.2", features = ["js"] }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen-test = "0.3"

[package.metadata.docs.rs]
features = ["all"]

[patch.crates-io]
ultrasonic = { git = "https://github.com/AluVM/ultrasonic" }
hypersonic = { git = "https://github.com/AluVM/sonic" }
bp-core = { git = "https://github.com/BP-WG/bp-core", branch = "v0.12" }
rgb-core = { git = "https://github.com/RGB-WG/rgb-core", branch = "v0.12" }
